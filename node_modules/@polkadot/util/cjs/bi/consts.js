"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._sqrt2pow53n = exports._9n = exports._8n = exports._7n = exports._6n = exports._5n = exports._4n = exports._3n = exports._2pow53n = exports._2n = exports._1n = exports._1Qn = exports._1Mn = exports._1Bn = exports._10n = exports._100n = exports._1000n = exports._0n = void 0;
var _xBigint = require("@polkadot/x-bigint");
// Copyright 2017-2023 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name _0n
 * @summary BigInt constant for 0.
 */
const _0n = /*#__PURE__*/(0, _xBigint.BigInt)(0);

/**
 * @name _1n
 * @summary BigInt constant for 1.
 */
exports._0n = _0n;
const _1n = /*#__PURE__*/(0, _xBigint.BigInt)(1);

/**
 * @name _2n
 * @summary BigInt constant for 2.
 */
exports._1n = _1n;
const _2n = /*#__PURE__*/(0, _xBigint.BigInt)(2);

/**
 * @name _3n
 * @summary BigInt constant for 3.
 */
exports._2n = _2n;
const _3n = /*#__PURE__*/(0, _xBigint.BigInt)(3);

/**
 * @name _4n
 * @summary BigInt constant for 4.
 */
exports._3n = _3n;
const _4n = /*#__PURE__*/(0, _xBigint.BigInt)(4);

/**
 * @name _5n
 * @summary BigInt constant for 5.
 */
exports._4n = _4n;
const _5n = /*#__PURE__*/(0, _xBigint.BigInt)(5);

/**
 * @name _6n
 * @summary BigInt constant for 6.
 */
exports._5n = _5n;
const _6n = /*#__PURE__*/(0, _xBigint.BigInt)(6);

/**
 * @name _7n
 * @summary BigInt constant for 7.
 */
exports._6n = _6n;
const _7n = /*#__PURE__*/(0, _xBigint.BigInt)(7);

/**
 * @name _8n
 * @summary BigInt constant for 8.
 */
exports._7n = _7n;
const _8n = /*#__PURE__*/(0, _xBigint.BigInt)(8);

/**
 * @name _9n
 * @summary BigInt constant for 9.
 */
exports._8n = _8n;
const _9n = /*#__PURE__*/(0, _xBigint.BigInt)(9);

/**
 * @name _10n
 * @summary BigInt constant for 10.
 */
exports._9n = _9n;
const _10n = /*#__PURE__*/(0, _xBigint.BigInt)(10);

/**
 * @name _100n
 * @summary BigInt constant for 100.
 */
exports._10n = _10n;
const _100n = /*#__PURE__*/(0, _xBigint.BigInt)(100);

/**
 * @name _1000n
 * @summary BigInt constant for 1000.
 */
exports._100n = _100n;
const _1000n = /*#__PURE__*/(0, _xBigint.BigInt)(1000);

/**
 * @name _1Mn
 * @summary BigInt constant for 1,000,000 (million).
 */
exports._1000n = _1000n;
const _1Mn = /*#__PURE__*/(0, _xBigint.BigInt)(1000000);

/**
* @name _1Bn
* @summary BigInt constant for 1,000,000,000 (billion).
*/
exports._1Mn = _1Mn;
const _1Bn = /*#__PURE__*/(0, _xBigint.BigInt)(1000000000);

/**
* @name _1Qn
* @summary BigInt constant for 1,000,000,000,000,000,000 (quitillion).
*/
exports._1Bn = _1Bn;
const _1Qn = _1Bn * _1Bn;

/**
* @name _2pow53n
* @summary BigInt constant for MAX_SAFE_INTEGER
*/
exports._1Qn = _1Qn;
const _2pow53n = /*#__PURE__*/(0, _xBigint.BigInt)(Number.MAX_SAFE_INTEGER);

/**
 * @name _sqrt2pow53n
 * @summary BigInt constant for Math.sqrt(MAX_SAFE_INTEGER)
 */
exports._2pow53n = _2pow53n;
const _sqrt2pow53n = /*#__PURE__*/(0, _xBigint.BigInt)(94906265);
exports._sqrt2pow53n = _sqrt2pow53n;